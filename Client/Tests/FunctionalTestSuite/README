#
# $Id: README,v 1.6 2008/05/09 15:29:17 delgadop Exp $
#
# DLS Client Functional Test Suite. $Name: DLS_1_1_3 $.
# Antonio Delgado Peris. CIEMAT. CMS.
#

Introduction
------------
The DLS Client Functional Test Suite is a suite to check that the DLS
Client API and CLI works as expected. In principle, for each DLS
implementation the CLI and API could work slightly different (some offer
more functionalities than others), so there can be different modules
which contain classes implementing tests (in the unittest framework).

IMPORTANT NOTE: This test is intended for developers only. Other tests
may be used by users to test that their installation is working.
So DO NOT RUN THIS unless you know that you are doing!

For each test there is a runnable script that executes the different
tests. Usually, an optional additional argument may be used to execute a
desired subset of the tests (default is to execute all of them). Please
execute each script without options to obtain more information.

NOTE: In the case of the LFC tests, they rely on a clean directory in
the DLS, which they use and clean at the end (without removing the
directory itself).

The LFC and MySQL tests might be a bit out of date (as they are not used
anymore), but in principle they should still work.

The DBS one should be OK.

For PhEDEx back-end there is no test as it is a read-only back-end and
we need to know what there is in the database to make it work. Rather
try with the users' test.

In what follows we describe existing tests.

 
DlsDbsApiTest 
-------------
Test of the API for the DBS-based DLS implementation. 

Main files are:
 DlsDbsApiTest.py: contains the tests and is runnable
 DlsDbsApiTest.conf: example conf file for previous script


DlsDbsCliTest 
-------------
Test of the CLI for the DBS-based DLS implementation.
Since the CLI uses the API internally, both must be working.

Main files are:
 DlsDbsApiTest.py: contains the tests and is runnable
 DlsDbsApiTest.conf: example conf file for previous script

 
DlsApiTest (LFC, MySQL)
------------------------
General test of the API for the DLS implementations (it should work with
LFC or MySQL implementations). It does not include LFC-only capabilities
like attributes or transactions.

If everything is all right, this test version should produce no error with
latest DLS API implementations.

Main files are:
 DlsApiTest.py: contains the tests and is runnable
 DlsApiTest.conf: example conf file for previous script

In addition, you need, of course, the DLS Client API code (python modules).

For LFC API testing, you also need standard globus security installed, the
lfc.py library, a valid grid proxy and access to a LFC-based DLS server.


DlsLfcApiTest
-------------
Test of the API for the LFC-based DLS implementation. It includes some 
LFC-only capabilities like attributes support or transactions.

If everything is all right, this test version should produce no error with
latest LFC-based DLS API implementation.

Main files are:
 DlsLfcApiTest.py: contains the tests and is runnable
 DlsLfcApiTest.conf: example conf file for previous script

In addition, you need, of course, the DLS Client API code (python modules).

You also need standard globus security installed, the lfc.py library, a
valid grid proxy and access to a LFC-based DLS server.


DlsLfcCliTest
-------------
Test of the CLI for the LFC-based DLS implementation. Since the CLI uses
the API, this test also tests the API indirectly (though not in a 
comprenhensive way).

If everything is all right, this test version should produce no error with
latest DLS Client.

Main files are:
 DlsLfcCliTest.py: contains the tests and is runnable
 DlsLfcCliTest.conf: example conf file for previous script
 anto_utils.py, lfc_del*, lfc-del*: utilities used by the script

In addition, you need, of course, the DLS Client API code (python modules)
and the command line tools (python scripts).

You also need standard globus security installed, the lfc.py library,
a valid grid proxy and access to a LFC-based DLS server.
